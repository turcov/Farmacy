/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iucosoft.farmacy.gui;

import com.iucosoft.farmacy.dao.CategoryDaoIntf;
import com.iucosoft.farmacy.dao.impl.CategoryDaoImpl;
import com.iucosoft.farmacy.gui.models.CategoryListModel;
import com.iucosoft.farmacy.model.Category;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Serguei
 */
public class JFrameCategory extends javax.swing.JFrame {

    /**
     * Creates new form JFrameCategory
     */
    public JFrameCategory(StringBuilder mode) throws Exception {
        this.mode=mode;
        initComponents();
        initGuiModels();
        setLocationRelativeTo(null);
    }

    void initGuiModels() throws Exception {
        catDao = new CategoryDaoImpl();
        aCategoryListModel = new CategoryListModel();
        jListCategory.setModel(aCategoryListModel);
        if(mode.toString().equals("Manager")){
            jButtonCreateCategory.setEnabled(false);
            jButtonEditCategory.setEnabled(false);
            jButtonRemoveCategory.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuCategories = new javax.swing.JPopupMenu();
        jMenuItemCreateCategory = new javax.swing.JMenuItem();
        jMenuItemRenameCategory = new javax.swing.JMenuItem();
        jMenuItemRemoveCategory = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCategory = new javax.swing.JList();
        jButtonCreateCategory = new javax.swing.JButton();
        jButtonEditCategory = new javax.swing.JButton();
        jButtonRemoveCategory = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        jMenuItemCreateCategory.setText("Create Category");
        jMenuItemCreateCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreateCategoryActionPerformed(evt);
            }
        });
        jPopupMenuCategories.add(jMenuItemCreateCategory);

        jMenuItemRenameCategory.setText("Rename Category");
        jMenuItemRenameCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRenameCategoryActionPerformed(evt);
            }
        });
        jPopupMenuCategories.add(jMenuItemRenameCategory);

        jMenuItemRemoveCategory.setText("Remove Category");
        jMenuItemRemoveCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRemoveCategoryActionPerformed(evt);
            }
        });
        jPopupMenuCategories.add(jMenuItemRemoveCategory);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        jListCategory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jListCategoryMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jListCategoryMouseReleased(evt);
            }
        });
        jListCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jListCategoryKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jListCategory);

        jButtonCreateCategory.setText("Create category");
        jButtonCreateCategory.setToolTipText("Hotkey INSERT");
        jButtonCreateCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateCategoryActionPerformed(evt);
            }
        });

        jButtonEditCategory.setText("Rename category");
        jButtonEditCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditCategoryActionPerformed(evt);
            }
        });

        jButtonRemoveCategory.setText("Remove Category");
        jButtonRemoveCategory.setToolTipText("HotKey DELETE");
        jButtonRemoveCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveCategoryActionPerformed(evt);
            }
        });

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonEditCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCreateCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRemoveCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonClose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCreateCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEditCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRemoveCategory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonClose))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonCreateCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateCategoryActionPerformed
        String name = JOptionPane.showInputDialog("Input name of category");

        if (name != null && !name.equals("")) {
            catDao.createCategory(new Category(name));
        }
        refreshList();
    }//GEN-LAST:event_jButtonCreateCategoryActionPerformed

    private void jButtonEditCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditCategoryActionPerformed
        if (jListCategory.getSelectedIndex()>=0) {
            String name = JOptionPane.showInputDialog("Input name of category", jListCategory.getSelectedValue().toString());
            if (name != null && !name.equals("")) {
                Category categ = (Category) jListCategory.getSelectedValue();
                categ.setNameCategory(name);
                catDao.updateCategory(categ);
            }
            refreshList();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a category to rename");
        }
    }//GEN-LAST:event_jButtonEditCategoryActionPerformed

    private void jListCategoryMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListCategoryMouseReleased
        if(evt.isPopupTrigger()){
            jPopupMenuCategories.show(jListCategory, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jListCategoryMouseReleased

    private void jButtonRemoveCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveCategoryActionPerformed
        if (jListCategory.getSelectedIndex()>=0) {
            Category categ = (Category) jListCategory.getSelectedValue();
            int rez = JOptionPane.showConfirmDialog(this, "Remove category " + categ.getNameCategory() + " ?","",JOptionPane.YES_NO_OPTION);
            if (rez == JOptionPane.YES_OPTION) {
                catDao.removeCategory(categ);
                refreshList();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a category to delete");
        }
    }//GEN-LAST:event_jButtonRemoveCategoryActionPerformed

    private void jListCategoryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListCategoryKeyReleased
        if(evt.getKeyCode()==127){
            jButtonRemoveCategoryActionPerformed(null);
        }
        if(evt.getKeyCode()==155){
            jButtonCreateCategoryActionPerformed(null);
        }
    }//GEN-LAST:event_jListCategoryKeyReleased

    private void jMenuItemCreateCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreateCategoryActionPerformed
        jButtonCreateCategoryActionPerformed(evt);
    }//GEN-LAST:event_jMenuItemCreateCategoryActionPerformed

    private void jMenuItemRenameCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRenameCategoryActionPerformed
        jButtonEditCategoryActionPerformed(evt);
    }//GEN-LAST:event_jMenuItemRenameCategoryActionPerformed

    private void jMenuItemRemoveCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRemoveCategoryActionPerformed
        jButtonRemoveCategoryActionPerformed(evt);
    }//GEN-LAST:event_jMenuItemRemoveCategoryActionPerformed

    private void jListCategoryMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListCategoryMousePressed
        if(evt.isPopupTrigger()){
            jPopupMenuCategories.show(jListCategory, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jListCategoryMousePressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
         if(evt.getKeyCode()==155){
            jButtonCreateCategoryActionPerformed(null);
        }
    }//GEN-LAST:event_formKeyReleased

    void refreshList() {
        aCategoryListModel.refreshModel();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameCategory(null).setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(JFrameCategory.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonCreateCategory;
    private javax.swing.JButton jButtonEditCategory;
    private javax.swing.JButton jButtonRemoveCategory;
    private javax.swing.JList jListCategory;
    private javax.swing.JMenuItem jMenuItemCreateCategory;
    private javax.swing.JMenuItem jMenuItemRemoveCategory;
    private javax.swing.JMenuItem jMenuItemRenameCategory;
    private javax.swing.JPopupMenu jPopupMenuCategories;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    CategoryDaoIntf catDao;
    CategoryListModel aCategoryListModel;
    StringBuilder mode;
}
